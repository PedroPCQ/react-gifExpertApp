{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","seTinputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEVC,mBAAU,IAFA,mBAExCC,EAFwC,KAE5BC,EAF4B,KAsBhD,OAEI,sBAAMC,SAdW,SAAEC,GACnBA,EAAMC,iBAEDJ,EAAWK,OAAOC,QAAU,IAE7BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAE9CN,EAAe,MAOnB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAxBc,SAAEP,GAExBF,EAAeE,EAAMQ,OAAOF,a,+BCTvBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAIII,MAAOF,GAJX,cAIbG,EAJa,gBAMIA,EAASC,OANb,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbvB,kBAkBZM,GAlBY,4CAAH,sDCGPO,G,KAAc,SAAC,GAAwB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEtC,OACI,sBAAKc,UAAY,yCAAjB,UACI,qBAAKC,IAAQf,EAAMgB,IAAQN,IAC3B,4BAAKA,SCJJO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EAEdd,mBAAU,CAEhCqB,KAAM,GACNa,SAAS,IAL2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAwBxC,OAfAC,qBAAW,WAEPxB,EAASC,GAEJwB,MAAM,SAAAX,GAEHS,EAAU,CACNf,KAAMM,EACNO,SAAS,SAKtB,CAAEpB,IAEGqB,EDrByBI,CAAczB,GAAlCa,EAF0B,EAEhCN,KAAca,EAFkB,EAElBA,QAErB,OACI,qCACI,6BAAMpB,IAEJoB,GAAW,2CAGb,qBAAKJ,UAAY,WAAjB,SAEMH,EAAOJ,KAAK,SAAAC,GAAG,OAAI,wBAAC,EAAD,2BAAkBA,GAAlB,IAAwBgB,IAAQhB,EAAIC,eEb5DgB,EAAe,WAAO,IAAD,EAEKzC,mBAAU,CAAE,mBAFjB,mBAExBQ,EAFwB,KAEZT,EAFY,KAQ9B,OAEI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAkBA,IAE/B,uBAEA,6BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAASA,SAAaA,GAAmBA,Y,MCjBzF4B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a64ac7b2.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport propTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setcategories } ) => {\r\n\r\n    const [ inputValue, seTinputValue ] = useState( '' );\r\n\r\n    const handleInputChange = ( event ) => {\r\n\r\n        seTinputValue( event.target.value );\r\n\r\n    }\r\n\r\n    const handleSubmit = ( event ) => {\r\n        event.preventDefault();\r\n\r\n        if ( inputValue.trim().length >= 2 ) {\r\n\r\n            setcategories( categories => [ inputValue, ...categories ] );\r\n\r\n            seTinputValue( '' );\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit = { handleSubmit }>\r\n            <input\r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n\r\n    );\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: propTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=xOl5x5DGg0UKa5dZCyAg75upR7zBOqC9`;\r\n\r\n    const response = await fetch( url );\r\n\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    } );\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\nimport 'animate.css';\r\n\r\nexport const GifGridItem = ( { id, title, url} ) => {\r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__bounce\">\r\n            <img src = { url } alt = { title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n   const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p>Loading...</p> }\r\n\r\n\r\n            <div className = \"cardGrid\">\r\n\r\n                { images.map( img => <GifGridItem { ...img } key = { img.id } /> ) }\r\n    \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   \r\n    const [state, setState] = useState( {\r\n\r\n        data: [],\r\n        loading: true\r\n\r\n    } );\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n\r\n            .then( images => {\r\n\r\n                setState( {\r\n                    data: images,\r\n                    loading: false\r\n                } );\r\n\r\n            } );\r\n\r\n    }, [ category ] );\r\n\r\n    return  state; //{ data: [], loading: true}\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   const [categories, setcategories] = useState( [ 'Rick and Morty' ] );\r\n\r\n//    const handleAdd = () => {\r\n//         setcategories( [...categories, 'HunterxHunter'] );\r\n//    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setcategories = { setcategories } />\r\n\r\n            <hr />\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => <GifGrid category = { category } key = { category } /> )\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  document.getElementById('root')\n\n);\n"],"sourceRoot":""}